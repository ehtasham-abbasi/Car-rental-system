import java.util.ArrayList;
import java.util.Scanner;

class Car {
    private String model;
    private String registrationNumber;
    private boolean isAvailable;

    public Car(String model, String registrationNumber) {
        this.model = model;
        this.registrationNumber = registrationNumber;
        this.isAvailable = true;  // By default, a car is available
    }

    public String getModel() {
        return model;
    }

    public String getRegistrationNumber() {
        return registrationNumber;
    }

    public boolean isAvailable() {
        return isAvailable;
    }

    public void rentCar() {
        if (isAvailable) {
            isAvailable = false;
            System.out.println(model + " (" + registrationNumber + ") has been rented out.");
        } else {
            System.out.println("Sorry, this car is already rented.");
        }
    }

    public void returnCar() {
        if (!isAvailable) {
            isAvailable = true;
            System.out.println(model + " (" + registrationNumber + ") has been returned.");
        } else {
            System.out.println("This car was not rented.");
        }
    }

    @Override
    public String toString() {
        return model + " (" + registrationNumber + ") - " + (isAvailable ? "Available" : "Rented");
    }
}

class CarRentalSystem {
    private ArrayList<Car> cars;
    private Scanner scanner;

    public CarRentalSystem() {
        cars = new ArrayList<>();
        scanner = new Scanner(System.in);
    }

    public void addCar() {
        System.out.println("Enter car model: ");
        String model = scanner.nextLine();
        System.out.println("Enter car registration number: ");
        String registrationNumber = scanner.nextLine();
        cars.add(new Car(model, registrationNumber));
        System.out.println("Car added successfully.");
    }

    public void displayAvailableCars() {
        System.out.println("Available cars for rent:");
        boolean found = false;
        for (Car car : cars) {
            if (car.isAvailable()) {
                System.out.println(car);
                found = true;
            }
        }
        if (!found) {
            System.out.println("No available cars.");
        }
    }

    public void rentCar() {
        System.out.println("Enter the registration number of the car you want to rent: ");
        String registrationNumber = scanner.nextLine();
        for (Car car : cars) {
            if (car.getRegistrationNumber().equalsIgnoreCase(registrationNumber) && car.isAvailable()) {
                car.rentCar();
                return;
            }
        }
        System.out.println("Car not available or invalid registration number.");
    }

    public void returnCar() {
        System.out.println("Enter the registration number of the car you want to return: ");
        String registrationNumber = scanner.nextLine();
        for (Car car : cars) {
            if (car.getRegistrationNumber().equalsIgnoreCase(registrationNumber) && !car.isAvailable()) {
                car.returnCar();
                return;
            }
        }
        System.out.println("Car not rented or invalid registration number.");
    }

    public void menu() {
        while (true) {
            System.out.println("\nCar Rental System Menu:");
            System.out.println("1. Add Car");
            System.out.println("2. Display Available Cars");
            System.out.println("3. Rent a Car");
            System.out.println("4. Return a Car");
            System.out.println("5. Exit");
            System.out.print("Enter your choice: ");
            int choice = scanner.nextInt();
            scanner.nextLine(); // Consume newline character left by nextInt()

            switch (choice) {
                case 1:
                    addCar();
                    break;
                case 2:
                    displayAvailableCars();
                    break;
                case 3:
                    rentCar();
                    break;
                case 4:
                    returnCar();
                    break;
                case 5:
                    System.out.println("Exiting the system...");
                    return;
                default:
                    System.out.println("Invalid choice. Please try again.");
            }
        }
    }
}

public class CarRentalApp {
    public static void main(String[] args) {
        CarRentalSystem rentalSystem = new CarRentalSystem();
        rentalSystem.menu();
    }
}
