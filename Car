import java.util.ArrayList;
import java.util.List;
import java.util.Scanner;

class Car {
    private String licensePlate;
    private String model;
    private boolean isRented;

    public Car(String licensePlate, String model) {
        this.licensePlate = licensePlate;
        this.model = model;
        this.isRented = false;
    }

    public String getLicensePlate() {
        return licensePlate;
    }

    public String getModel() {
        return model;
    }

    public boolean isRented() {
        return isRented;
    }

    public void rent() {
        this.isRented = true;
    }

    public void returnCar() {
        this.isRented = false;
    }
}

class Customer {
    private String name;
    private String id;

    public Customer(String name, String id) {
        this.name = name;
        this.id = id;
    }

    public String getName() {
        return name;
    }

    public String getId() {
        return id;
    }
}

class RentalService {
    private List<Car> cars;
    
    public RentalService() {
        cars = new ArrayList<>();
        // Adding some default cars
        cars.add(new Car("ABC123", "Toyota Corolla"));
        cars.add(new Car("XYZ789", "Honda Civic"));
        cars.add(new Car("LMN456", "Ford Focus"));
    }

    public void displayAvailableCars() {
        System.out.println("Available Cars:");
        for (Car car : cars) {
            if (!car.isRented()) {
                System.out.println(car.getLicensePlate() + " - " + car.getModel());
            }
        }
    }

    public void rentCar(String licensePlate, Customer customer) {
        for (Car car : cars) {
            if (car.getLicensePlate().equalsIgnoreCase(licensePlate) && !car.isRented()) {
                car.rent();
                System.out.println(customer.getName() + " has rented the car: " + car.getModel());
                return;
            }
        }
        System.out.println("Car not available for rent.");
    }

    public void returnCar(String licensePlate) {
        for (Car car : cars) {
            if (car.getLicensePlate().equalsIgnoreCase(licensePlate) && car.isRented()) {
                car.returnCar();
                System.out.println("Car " + car.getModel() + " returned successfully.");
                return;
            }
        }
        System.out.println("This car was not rented.");
    }
}

public class CarRentalManagementSystem {

    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        RentalService rentalService = new RentalService();

        while (true) {
            System.out.println("\n--- Car Rental Management System ---");
            System.out.println("1. Display Available Cars");
            System.out.println("2. Rent a Car");
            System.out.println("3. Return a Car");
            System.out.println("4. Exit");
            System.out.print("Choose an option: ");
            
            int choice = scanner.nextInt();
            scanner.nextLine(); // Consume newline

            switch (choice) {
                case 1:
                    rentalService.displayAvailableCars();
                    break;

                case 2:
                    System.out.print("Enter your name: ");
                    String name = scanner.nextLine();
                    System.out.print("Enter your ID: ");
                    String id = scanner.nextLine();
                    Customer customer = new Customer(name, id);
                    
                    System.out.print("Enter the license plate of the car you want to rent: ");
                    String licensePlateToRent = scanner.nextLine();
                    rentalService.rentCar(licensePlateToRent, customer);
                    break;

                case 3:
                    System.out.print("Enter the license plate of the car you want to return: ");
                    String licensePlateToReturn = scanner.nextLine();
                    rentalService.returnCar(licensePlateToReturn);
                    break;

                case 4:
                    System.out.println("Exiting the system. Thank you!");
                    scanner.close();
                    return;

                default:
                    System.out.println("Invalid option. Please try again.");
            }
        }
    }
}
